[{"C:\\black_jack\\black_jack\\src\\index.js":"1","C:\\black_jack\\black_jack\\src\\App.js":"2","C:\\black_jack\\black_jack\\src\\reportWebVitals.js":"3","C:\\black_jack\\black_jack\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"4","C:\\black_jack\\black_jack\\src\\components\\UI\\Logo\\Logo.js":"5","C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"6","C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"7","C:\\black_jack\\black_jack\\src\\containers\\Game\\Game.js":"8","C:\\black_jack\\black_jack\\src\\containers\\Help\\Help.js":"9","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Deck.js":"10","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Card\\Card.js":"11","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\TableBoard.js":"12","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Dealer\\Dealer.js":"13","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\Player.js":"14","C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Controls.js":"15","C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Control\\Control.js":"16","C:\\black_jack\\black_jack\\src\\components\\UI\\Money\\Money.js":"17","C:\\black_jack\\black_jack\\src\\Store\\Actions\\index.js":"18","C:\\black_jack\\black_jack\\src\\Store\\Actions\\gameAction.js":"19","C:\\black_jack\\black_jack\\src\\Store\\Actions\\actionTypes.js":"20","C:\\black_jack\\black_jack\\src\\Store\\Actions\\roundAction.js":"21","C:\\black_jack\\black_jack\\src\\components\\UI\\startButton\\startButton.js":"22","C:\\black_jack\\black_jack\\src\\Store\\Actions\\cardAction.js":"23","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\roundReducer.js":"24","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\gameReducer.js":"25","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\cardReducer.js":"26","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Buttons\\Buttons.js":"27","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Buttons\\Button\\Button.js":"28","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\sumCards\\sumCards.js":"29","C:\\black_jack\\black_jack\\src\\components\\UI\\Chips\\Chips.js":"30","C:\\black_jack\\black_jack\\src\\hoc\\asyncComponent\\asyncComponent.js":"31","C:\\black_jack\\black_jack\\src\\hoc\\layout\\layout.js":"32"},{"size":1404,"mtime":1610558541540,"results":"33","hashOfConfig":"34"},{"size":450,"mtime":1612258885585,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":518,"mtime":1609709606059,"results":"37","hashOfConfig":"34"},{"size":504,"mtime":1609794501214,"results":"38","hashOfConfig":"34"},{"size":447,"mtime":1609853889181,"results":"39","hashOfConfig":"34"},{"size":574,"mtime":1609853867643,"results":"40","hashOfConfig":"34"},{"size":5991,"mtime":1612904913427,"results":"41","hashOfConfig":"34"},{"size":1276,"mtime":1611155171783,"results":"42","hashOfConfig":"34"},{"size":1449,"mtime":1612978791336,"results":"43","hashOfConfig":"34"},{"size":1958,"mtime":1612978965038,"results":"44","hashOfConfig":"34"},{"size":2810,"mtime":1612110597743,"results":"45","hashOfConfig":"34"},{"size":3785,"mtime":1612904913421,"results":"46","hashOfConfig":"34"},{"size":4323,"mtime":1612978681280,"results":"47","hashOfConfig":"34"},{"size":4626,"mtime":1612904913425,"results":"48","hashOfConfig":"34"},{"size":357,"mtime":1611586436290,"results":"49","hashOfConfig":"34"},{"size":3393,"mtime":1612904913426,"results":"50","hashOfConfig":"34"},{"size":1054,"mtime":1612904913416,"results":"51","hashOfConfig":"34"},{"size":619,"mtime":1612904913415,"results":"52","hashOfConfig":"34"},{"size":673,"mtime":1612904913414,"results":"53","hashOfConfig":"34"},{"size":1248,"mtime":1612904913417,"results":"54","hashOfConfig":"34"},{"size":531,"mtime":1610436404400,"results":"55","hashOfConfig":"34"},{"size":3197,"mtime":1612904913415,"results":"56","hashOfConfig":"34"},{"size":4215,"mtime":1612904913420,"results":"57","hashOfConfig":"34"},{"size":1037,"mtime":1612904913419,"results":"58","hashOfConfig":"34"},{"size":5767,"mtime":1612905595506,"results":"59","hashOfConfig":"34"},{"size":602,"mtime":1610620024242,"results":"60","hashOfConfig":"34"},{"size":279,"mtime":1610619392911,"results":"61","hashOfConfig":"34"},{"size":153,"mtime":1611155857714,"results":"62","hashOfConfig":"34"},{"size":479,"mtime":1612904913424,"results":"63","hashOfConfig":"34"},{"size":669,"mtime":1612904913430,"results":"64","hashOfConfig":"34"},{"size":382,"mtime":1612258874192,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"p3rekg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\black_jack\\black_jack\\src\\index.js",["137","138"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore , combineReducers , applyMiddleware} from 'redux';\nimport { composeWithDevTools , devToolsEnhancer  } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'; \nimport gameReduecer from './Store/Reduecers/gameReducer'\nimport roundReduecer from './Store/Reduecers/roundReducer'\nimport cardReduecer from './Store/Reduecers/cardReducer'\n\nconst composeEnhancers = composeWithDevTools({\n  name:'arik'  \n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst rootReduecer = combineReducers({\n  game:gameReduecer,\n  round:roundReduecer,\n  cards:cardReduecer\n});\n\nconst store = createStore(rootReduecer,composeEnhancers(\n  applyMiddleware(thunk),\n));\n// <React.StrictMode>\n// /* </React.StrictMode> */\n// \nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["139","140"],"C:\\black_jack\\black_jack\\src\\App.js",[],"C:\\black_jack\\black_jack\\src\\reportWebVitals.js",[],"C:\\black_jack\\black_jack\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Logo\\Logo.js",[],"C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\black_jack\\black_jack\\src\\containers\\Game\\Game.js",["141","142","143","144","145"],"import React, { useEffect, useRef } from 'react'\r\nimport classes from './Game.module.css'\r\nimport TableBoard from '../../components/TableBoard/TableBoard'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../Store/Actions/index'\r\n\r\n\r\nconst Game = (props) => {\r\n\r\n    const gameRefInitMount = useRef(false);\r\n    // let playerFinishedHisHands = props.stand.find(standValue => standValue === false)\r\n    useEffect(() => {\r\n        if( props.roundStatus === 'decision') \r\n        {\r\n            console.log('we made it to the desicions phase!')\r\n            let playerResults = [];\r\n            let totalProfit = 0;\r\n            for (const index in props.playerSum) {\r\n                if (props.playerSum[+index] < 22)\r\n                {\r\n                    switch (true) {\r\n                        case props.playerSum[+index] - props.dealerSum > 0:\r\n                            playerResults.push('win');\r\n                            totalProfit+= props.roundBids[index]*2;\r\n                            props.collectProfit(props.roundBids[+index]*2)\r\n                            break;\r\n                            case props.playerSum[+index] - props.dealerSum === 0:\r\n                                totalProfit+= props.roundBids[index];\r\n                                playerResults.push('tie');\r\n                                props.collectProfit(props.roundBids[+index])\r\n\r\n                            break;\r\n                        case props.playerSum[+index] - props.dealerSum < 0:\r\n                            playerResults.push('lost');\r\n                            totalProfit-= props.roundBids[index];\r\n                            props.collectProfit(-props.roundBids[+index])\r\n                            break;\r\n\r\n                        default:\r\n                            alert('something went wrong is [game.js] desicion');\r\n                            break;\r\n                    }   \r\n                }\r\n                else\r\n                {\r\n                    playerResults.push('lost');\r\n                    totalProfit-= props.roundBids[index];\r\n                    props.collectProfit(-props.roundBids[+index])\r\n                }\r\n            }\r\n            props.initRound();\r\n        }\r\n    }, [props.roundStatus]); \r\n    \r\n    useEffect(() => {\r\n        if( props.dealerBust) \r\n        {\r\n            console.log('we made it to the dealerBust phase!')\r\n            let totalProfit = 0;\r\n            for (const index in props.playerSum) {\r\n                if (props.playerSum[+index] < 22)\r\n                {\r\n                    totalProfit+= props.roundBids[index]*2;   \r\n                    props.collectProfit(props.roundBids[+index]*2) \r\n                }\r\n                else console.log('hand ' + (+index) + 'lost');\r\n                    totalProfit-= props.roundBids[index]*2;   \r\n                    props.collectProfit(-props.roundBids[+index]) \r\n            }\r\n            props.initRound();\r\n        }\r\n    }, [props.dealerBust]); \r\n    \r\n    useEffect(() => {\r\n        \r\n        if(gameRefInitMount.current) {\r\n            console.log('rendering Game from use effect');\r\n            console.log(props);\r\n            if(!props.dealerCards.length && props.roundStatus === 'pending')\r\n            {\r\n                // debugger;\r\n                props.devideStartingCards();\r\n            }\r\n        }\r\n        \r\n        \r\n        else {\r\n            gameRefInitMount.current = true\r\n        }\r\n    }, [props.roundStarted])\r\n    \r\n\r\n \r\n    // const checkStatus = () => {\r\n    //     if(props.dealerCards.legth) {\r\n    //         let sum = 0;\r\n    //         let cards = props.dealerCards;\r\n    //         for(let card of cards)\r\n    //         {\r\n    //             sum = sum + card.value;\r\n    //         }\r\n            \r\n    //     }\r\n    // }\r\n    // console.log('game');\r\n    console.count();\r\n\r\n\r\n    let finalResualt = '';\r\n    if(props.roundStatus === 'lost' || props.roundStatus === 'win' || props.roundStatus === 'tie')\r\n    {\r\n        finalResualt = props.roundStatus;\r\n    }\r\n\r\n    console.log(props.allStand)\r\n    return ( \r\n        // new Promise((res,rej)=> {\r\n\r\n        //     return setTimeout(()=>{},3000);\r\n        // }).then(data => {\r\n        \r\n        //     console.log('3 sec is up');\r\n        //     console.log(data);\r\n        // });\r\n\r\n        \r\n        // this.checkStatus();\r\n\r\n        \r\n            <div className={classes.Game}>\r\n                <h1>Welcome to Blackjack</h1>\r\n                <p className={classes.roundResualt}>\r\n                    {finalResualt}\r\n                    {/* {props.roundStatus === 'lost'?'dealer won': props.roundStatus === 'win' ? 'you won' : ''} */}\r\n                </p>\r\n                <TableBoard>\r\n\r\n                </TableBoard>\r\n                \r\n            </div>\r\n        \r\n    )\r\n\r\n}\r\nconst MapStateToProps = state => {\r\n    return {\r\n      dealerCards:state.cards.dealerCards,\r\n      playerCards:state.cards.playerCards,\r\n      roundStatus:state.round.roundStatus,\r\n      roundBids:state.round.bid,\r\n      budget:state.game.budget,\r\n      dealerSum:state.cards.dealerCardsSum,\r\n      playerSum:state.cards.playerCardsSum,\r\n      stand:state.round.stand,\r\n      allStand:state.round.stand.find(el=> el === false),\r\n    //   numOfSplits:state.round.split,\r\n      roundStarted:state.round.round,\r\n      dealerBust:state.round.dealerBust\r\n    }\r\n}\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n    return {\r\n        // startGame : () => dispatch(actions.startGame()),\r\n        changeRoundStatus : (status) => dispatch(actions.roundStatus(status)),\r\n        initRound : (totalProfit) => dispatch(actions.initRound(totalProfit)),\r\n        hitOneMoreCard : (newBudget) => dispatch(actions.initRound(newBudget)),\r\n        devideStartingCards : () => dispatch(actions.devideCardForRoundStart()),\r\n        collectProfit : (profit) => dispatch(actions.collectProfits(profit))\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps,mapDistpatchToProps)(Game)","C:\\black_jack\\black_jack\\src\\containers\\Help\\Help.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Deck.js",["146","147"],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Card\\Card.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\TableBoard.js",["148"],"import React, { Component , Fragment , memo} from 'react'\r\nimport Dealer from './Dealer/Dealer'\r\nimport {connect} from 'react-redux'\r\nimport Player from './Player/Player'\r\nimport classes from './TableBoard.module.css'\r\nimport StartButton from '../UI/startButton/startButton'\r\nimport * as actions from '../../Store/Actions/index'\r\n// import Buttons from './Buttons/Buttons'\r\nimport Money from '../UI/Money/Money'\r\nimport Controls from '../UI/Controls/Controls'\r\nimport Chips from '../UI/Chips/Chips'\r\n\r\nexport class TableBoard extends Component {\r\n\r\n    state = {\r\n        playing:false\r\n    }\r\n\r\n    \r\n  \r\n\r\n    // componentDidMount = () => {\r\n    //     console.log('tableBoard rendered');\r\n        \r\n        \r\n    // }\r\n    \r\n    componentDidUpdate = () => {\r\n        \r\n    }\r\n\r\n    startGameFunc = (e) => {\r\n        this.props.startGame();\r\n        this.setState({playing:true});\r\n        e.preventDefault();\r\n        \r\n        \r\n    }\r\n    \r\n    render() {\r\n       \r\n        let playerStillAlive = (<Fragment>\r\n            <div className={classes.dealerAndPlayer}>     \r\n                <Dealer></Dealer>\r\n                <Chips></Chips>\r\n                <Player></Player>\r\n            </div>\r\n            <div className={classes.Money}>\r\n                <Money children={'nope'}>\r\n                </Money>\r\n            </div>\r\n            <div className={classes.Controls}>\r\n                <Controls></Controls>\r\n            </div>\r\n        </Fragment>);\r\n\r\n        let playerLost = <div className={classes.playerLost}>\r\n            better luck next time </div>\r\n\r\n       console.count('tableBoard')\r\n        return (\r\n            <div className={classes.TableBoard}>\r\n                {this.props.lost ? playerLost: playerStillAlive}\r\n                {/* : */}\r\n                {/* <Fragment>\r\n\r\n                <StartButton\r\n                    // clicked={this.startGameFunc}\r\n                    >\r\n                        start game\r\n                </StartButton>\r\n                \r\n                </Fragment>\r\n                } */}\r\n                {/* <div className={classes.Dealer}>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst MapStateToProps = state => {\r\n    return {\r\n        playing : state.game.isPlaying,\r\n        lost: state.game.lost\r\n        // round:state.round.round\r\n        // dealerCards:state.cards.dealerCards,\r\n        // playerCards:state.cards.playerCards\r\n        \r\n    }\r\n}\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n    return {\r\n        startGame : () => dispatch(actions.startGame()),\r\n        // startRound : () => dispatch(actions.startRound()),\r\n        // startDevideCards : () => dispatch(actions.devideCardForRoundStart())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps,mapDistpatchToProps)(memo(TableBoard))\r\n\r\n\r\n","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Dealer\\Dealer.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\Player.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Controls.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Control\\Control.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Money\\Money.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\index.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\gameAction.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\actionTypes.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\roundAction.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\startButton\\startButton.js",["149"],"import React from 'react'\r\nimport classes from './startButton.module.css'\r\n\r\nconst StartButton = (props) => {\r\n    return (\r\n        <div className={classes.startButton}>\r\n            {/* <button\r\n            onClick={props.click}\r\n            >{props.children}\r\n            </button> */}\r\n            <a href=\"#\" onClick={props.clicked} className={classes.btn + ' ' + classes.btnAnimate\r\n        + ' ' + classes.btnWhite}>{props.children}</a>\r\n        </div>\r\n    )\r\n}\r\n// \"btn btn-white btn-animate\"\r\nexport default StartButton\r\n","C:\\black_jack\\black_jack\\src\\Store\\Actions\\cardAction.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\roundReducer.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\gameReducer.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\cardReducer.js",["150"],"import * as actionTypes from '../Actions/actionTypes'\r\n\r\nconst initState = {\r\n    dealerCards:[],\r\n    dealerCardsSum:0,\r\n    playerCards:[],\r\n    playerCardsSum:[],\r\n}\r\n\r\n// demonstration\r\nconst playerDecks = {\r\n    playerCards: [\r\n        [{\r\n            value:'value',\r\n            symbol:'synbol',\r\n            isAce:'true/false'\r\n        },\r\n        {   value:'value',\r\n            symbol:'synbol',\r\n            isAce:'true/false'\r\n        }],\r\n        [],\r\n        []\r\n    ]\r\n}\r\n\r\n\r\nconst checkForDifferentSum = cards => {\r\n    let countAces = 0;\r\n    let sum = 0;\r\n    \r\n    for(let card of cards)\r\n    {\r\n        if(card.value > 10 && !card.Ace)\r\n        sum = sum + 10;\r\n        else if(card.Ace)    \r\n        {\r\n            countAces++;\r\n            sum+=11;\r\n        }\r\n        else sum+=card.value;\r\n    }   \r\n    let closestToPassed = sum;\r\n    if(countAces)\r\n    {   \r\n        for (let index = 1; index < countAces + 1; index++) {\r\n            if(sum - index*10 < 22)\r\n                return (sum - index*10)\r\n            closestToPassed = (sum - index*10)    \r\n        }   \r\n    }\r\n    return closestToPassed;\r\n}\r\n\r\n// const checkNumOfAces = (cards) => {\r\n//         let count = 0;\r\n//         for(let card of cards)\r\n//         {\r\n//             if(card.Ace)\r\n//             {\r\n//                 count++;\r\n//                 //do something\r\n//             }\r\n//         }\r\n        \r\n// }\r\n\r\nconst reduecer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.DEVIDE_STARTING_CARDS:\r\n            let playerSum = action.playerCardsSum;\r\n            if(action.playerCardsSum>21)\r\n                playerSum = checkForDifferentSum(action.playerCards);\r\n            let dealerSum = action.dealerCardsSum;\r\n            if(action.dealerCardsSum>21)\r\n                dealerSum = checkForDifferentSum(action.dealerCards);\r\n            return {...state,\r\n                dealerCards:action.dealerCards,\r\n                playerCards:[...state.playerCards ,action.playerCards],\r\n                playerCardsSum:[...state.playerCardsSum,playerSum],\r\n                dealerCardsSum:dealerSum\r\n            }\r\n        case actionTypes.ADD_CARD:\r\n            // debugger;\r\n\r\n            let sum ;\r\n            if(action.card.value > 10 && !action.card.Ace)\r\n                sum = 10 + (action.holder === 'player' ? state.playerCardsSum[action.NumOfsplits] : state.dealerCardsSum);\r\n            else\r\n                sum = action.card.value + (action.holder === 'player' ? state.playerCardsSum[action.NumOfsplits] : state.dealerCardsSum);\r\n            if(sum > 21)\r\n                sum = checkForDifferentSum([...(action.holder === 'player' ? state.playerCards[action.NumOfsplits] : state.dealerCards) , action.card]);\r\n       \r\n\r\n            if(action.holder === 'player')\r\n            {\r\n                let playerCardsSumArray = state.playerCardsSum.map((value,index)=>{\r\n                    if(index === action.NumOfsplits)\r\n                        return sum;\r\n                    else return value;\r\n                })\r\n\r\n                let newPlayerCards = state.playerCards.map((deck,deckIndex)=>{\r\n                    if(deckIndex === action.NumOfsplits)\r\n                        return [...state.playerCards[deckIndex],action.card]\r\n                    else return state.playerCards[deckIndex]\r\n                });\r\n\r\n                return {...state,\r\n                playerCards:newPlayerCards,\r\n                playerCardsSum:playerCardsSumArray\r\n                }\r\n            }\r\n            else return {\r\n                ...state,\r\n                    dealerCards:[...state.dealerCards,action.card],\r\n                    dealerCardsSum:sum\r\n            };\r\n        case actionTypes.CHANGE_CARDS_SUM:\r\n\r\n            if(action.deckOwner === 'Dealer') \r\n            {\r\n                return {\r\n                    ...state,\r\n                    dealerCardsSum:action.newSum,\r\n                }\r\n            }\r\n            else {\r\n                let playerCardsSumArray = state.playerCardsSum.map((value,index)=>{\r\n                    if(index === action.NumOfsplits)\r\n                        return action.newSum;\r\n                    else return value;\r\n                })\r\n                return {\r\n                    ...state,\r\n                    playerCardsSum:playerCardsSumArray\r\n                }\r\n            }\r\n        case actionTypes.INIT_ROUND:\r\n            console.log('init game');\r\n            return {\r\n                ...initState\r\n            }\r\n        case actionTypes.SPLIT_DECK:\r\n            // set new card decks for the player after the split\r\n            let firstSplitedCard = state.playerCards[action.numOfSplits][0] \r\n            let secondSplitedCard = [];\r\n             secondSplitedCard.push( state.playerCards[action.numOfSplits][1]) \r\n            let newPlayerCards = state.playerCards.map((deck,deckIndex)=>{\r\n                if(deckIndex === action.numOfSplits)\r\n                    return [firstSplitedCard];\r\n                else return [deck[0]];\r\n            } ) ;\r\n            newPlayerCards = newPlayerCards.concat([secondSplitedCard]);\r\n            // set new card decks summary array   \r\n            let newPlayerSumCards = state.playerCardsSum.concat(state.playerCardsSum[action.numOfSplits]/2);\r\n            newPlayerSumCards = newPlayerSumCards.map((el,index) => {\r\n                if(index === action.numOfSplits)\r\n                    return el/2\r\n                else return el;\r\n            })\r\n            return {\r\n                ...state,\r\n                playerCards:newPlayerCards,\r\n                playerCardsSum:newPlayerSumCards\r\n                \r\n            }\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\n\r\nexport default reduecer;","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Buttons\\Buttons.js",[],["151","152"],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Buttons\\Button\\Button.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\sumCards\\sumCards.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Chips\\Chips.js",[],"C:\\black_jack\\black_jack\\src\\hoc\\asyncComponent\\asyncComponent.js",[],"C:\\black_jack\\black_jack\\src\\hoc\\layout\\layout.js",[],{"ruleId":"153","severity":1,"message":"154","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"153","severity":1,"message":"157","line":8,"column":32,"nodeType":"155","messageId":"156","endLine":8,"endColumn":48},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"153","severity":1,"message":"162","line":47,"column":21,"nodeType":"155","messageId":"156","endLine":47,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":53,"column":8,"nodeType":"165","endLine":53,"endColumn":27,"suggestions":"166"},{"ruleId":"153","severity":1,"message":"162","line":67,"column":21,"nodeType":"155","messageId":"156","endLine":67,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":72,"column":8,"nodeType":"165","endLine":72,"endColumn":26,"suggestions":"167"},{"ruleId":"163","severity":1,"message":"168","line":90,"column":8,"nodeType":"165","endLine":90,"endColumn":28,"suggestions":"169"},{"ruleId":"153","severity":1,"message":"170","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"171","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":19},{"ruleId":"153","severity":1,"message":"172","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":11,"column":13,"nodeType":"175","endLine":12,"endColumn":35},{"ruleId":"153","severity":1,"message":"176","line":11,"column":7,"nodeType":"155","messageId":"156","endLine":11,"endColumn":18},{"ruleId":"158","replacedBy":"177"},{"ruleId":"160","replacedBy":"178"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'devToolsEnhancer' is defined but never used.","no-native-reassign",["179"],"no-negated-in-lhs",["180"],"'totalProfit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["181"],["182"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["183"],"'Fragment' is defined but never used.","'doubleBid' is defined but never used.","'StartButton' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'playerDecks' is assigned a value but never used.",["179"],["180"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [props, props.roundStatus]",{"range":"190","text":"191"},"Update the dependencies array to be: [props, props.dealerBust]",{"range":"192","text":"193"},"Update the dependencies array to be: [props, props.roundStarted]",{"range":"194","text":"195"},[2245,2264],"[props, props.roundStatus]",[2974,2992],"[props, props.dealerBust]",[3463,3483],"[props, props.roundStarted]"]