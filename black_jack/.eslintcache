[{"C:\\black_jack\\black_jack\\src\\index.js":"1","C:\\black_jack\\black_jack\\src\\App.js":"2","C:\\black_jack\\black_jack\\src\\reportWebVitals.js":"3","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\gameReducer.js":"4","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\roundReducer.js":"5","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\cardReducer.js":"6","C:\\black_jack\\black_jack\\src\\hoc\\layout\\layout.js":"7","C:\\black_jack\\black_jack\\src\\containers\\Help\\Help.js":"8","C:\\black_jack\\black_jack\\src\\containers\\Game\\Game.js":"9","C:\\black_jack\\black_jack\\src\\Store\\Actions\\actionTypes.js":"10","C:\\black_jack\\black_jack\\src\\Store\\Actions\\index.js":"11","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\TableBoard.js":"12","C:\\black_jack\\black_jack\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"13","C:\\black_jack\\black_jack\\src\\Store\\Actions\\gameAction.js":"14","C:\\black_jack\\black_jack\\src\\Store\\Actions\\roundAction.js":"15","C:\\black_jack\\black_jack\\src\\Store\\Actions\\cardAction.js":"16","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Dealer\\Dealer.js":"17","C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js":"18","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\Player.js":"19","C:\\black_jack\\black_jack\\src\\components\\UI\\startButton\\startButton.js":"20","C:\\black_jack\\black_jack\\src\\components\\UI\\Logo\\Logo.js":"21","C:\\black_jack\\black_jack\\src\\components\\UI\\Money\\Money.js":"22","C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Controls.js":"23","C:\\black_jack\\black_jack\\src\\components\\UI\\Chips\\Chips.js":"24","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Deck.js":"25","C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"26","C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Control\\Control.js":"27","C:\\black_jack\\black_jack\\src\\hoc\\asyncComponent\\asyncComponent.js":"28","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Card\\Card.js":"29","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\decisionPhase\\decision.js":"30","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\decisionPhase\\Decision.js":"31","C:\\black_jack\\black_jack\\src\\components\\UI\\AlertBox\\AlertBox.js":"32"},{"size":1462,"mtime":1613750019551,"results":"33","hashOfConfig":"34"},{"size":450,"mtime":1621086868951,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":1069,"mtime":1626971691345,"results":"37","hashOfConfig":"34"},{"size":8076,"mtime":1632161940711,"results":"38","hashOfConfig":"34"},{"size":12714,"mtime":1632166706791,"results":"39","hashOfConfig":"34"},{"size":382,"mtime":1612258874192,"results":"40","hashOfConfig":"34"},{"size":1276,"mtime":1611155171783,"results":"41","hashOfConfig":"34"},{"size":9418,"mtime":1632168905158,"results":"42","hashOfConfig":"34"},{"size":1096,"mtime":1632161429648,"results":"43","hashOfConfig":"34"},{"size":5288,"mtime":1632168949234,"results":"44","hashOfConfig":"34"},{"size":2310,"mtime":1631199882848,"results":"45","hashOfConfig":"34"},{"size":518,"mtime":1609709606059,"results":"46","hashOfConfig":"34"},{"size":1274,"mtime":1615228316065,"results":"47","hashOfConfig":"34"},{"size":3568,"mtime":1632161945880,"results":"48","hashOfConfig":"34"},{"size":6274,"mtime":1632168886504,"results":"49","hashOfConfig":"34"},{"size":4135,"mtime":1627072162663,"results":"50","hashOfConfig":"34"},{"size":447,"mtime":1609853889181,"results":"51","hashOfConfig":"34"},{"size":6333,"mtime":1632170168628,"results":"52","hashOfConfig":"34"},{"size":531,"mtime":1626971691356,"results":"53","hashOfConfig":"34"},{"size":504,"mtime":1609794501214,"results":"54","hashOfConfig":"34"},{"size":3283,"mtime":1631024737170,"results":"55","hashOfConfig":"34"},{"size":8520,"mtime":1632151019698,"results":"56","hashOfConfig":"34"},{"size":687,"mtime":1631035720474,"results":"57","hashOfConfig":"34"},{"size":1379,"mtime":1621547092216,"results":"58","hashOfConfig":"34"},{"size":574,"mtime":1609853867643,"results":"59","hashOfConfig":"34"},{"size":799,"mtime":1627228038666,"results":"60","hashOfConfig":"34"},{"size":649,"mtime":1615229069655,"results":"61","hashOfConfig":"34"},{"size":2267,"mtime":1627051103189,"results":"62","hashOfConfig":"34"},{"size":916,"mtime":1631036797201,"results":"63","hashOfConfig":"34"},{"size":1023,"mtime":1631037934532,"results":"64","hashOfConfig":"34"},{"size":2023,"mtime":1632160658227,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"p3rekg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\black_jack\\black_jack\\src\\index.js",["138","139"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore , combineReducers , applyMiddleware} from 'redux';\r\nimport { composeWithDevTools , devToolsEnhancer  } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\nimport { Provider } from 'react-redux'; \r\nimport gameReduecer from './Store/Reduecers/gameReducer'\r\nimport roundReduecer from './Store/Reduecers/roundReducer'\r\nimport cardReduecer from './Store/Reduecers/cardReducer'\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  name:'arik',\r\n  trace:true\r\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\r\n});\r\n\r\nconst rootReduecer = combineReducers({\r\n  game:gameReduecer,\r\n  round:roundReduecer,\r\n  cards:cardReduecer\r\n});\r\n\r\nconst store = createStore(rootReduecer,composeEnhancers(\r\n  applyMiddleware(thunk),\r\n));\r\n// <React.StrictMode>\r\n// /* </React.StrictMode> */\r\n// \r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["140","141"],"C:\\black_jack\\black_jack\\src\\App.js",[],"C:\\black_jack\\black_jack\\src\\reportWebVitals.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\gameReducer.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\roundReducer.js",["142","143","144","145","146","147","148","149"],"import { actionPromise } from '../Actions'\r\nimport * as actionTypes from '../Actions/actionTypes'\r\n\r\nconst initState = {\r\n    round:false,\r\n    // split:0,\r\n    roundStatus:'',\r\n    handsResult:[''],\r\n    stand:[false],\r\n    dealerBust:false,\r\n    bid:[0],\r\n    originalBid:0,\r\n    insurance:false,\r\n    next:false,\r\n    \r\n}\r\n\r\nconst orderStandArray = (standArray ,indexToSwitch = 0) => {\r\n\r\n    // find index of \"false\" in standArray\r\n    let subtitutedIndex = standArray.findIndex((standValue,index) => { \r\n        if(index!== 0)    \r\n            return standValue==false\r\n        \r\n    })\r\n\r\n    if(subtitutedIndex === -1)\r\n        subtitutedIndex = 0;\r\n\r\n    return standArray.map((standStatus,index)=>{\r\n        // if(index === action.activeDeckIndex)\r\n        // if(index === action.activeDeckIndex)\r\n        //     return stand\r\n        // else return standStatus\r\n        switch (index) {\r\n            case indexToSwitch:\r\n                \r\n                // return standArray[standArray.length-1];\r\n                if(subtitutedIndex==0)\r\n                    return true\r\n                else\r\n                    return standArray[subtitutedIndex];\r\n            case subtitutedIndex:\r\n                return true;\r\n                \r\n            default:\r\n                return standStatus;\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nconst orderHandResultArray = (resultsArray,activeDeckIndex) => {\r\n    let subtitutedIndex = resultsArray.findIndex((resultValue,index) => { \r\n        if(index!== 0)    \r\n            return resultValue==\"\"\r\n        \r\n    });\r\n\r\n    if(subtitutedIndex === -1)\r\n    subtitutedIndex = 0;\r\n\r\n\r\n    let updatedHandsResult = resultsArray.map((result,index)=> {\r\n        // if(result === '' && index !== state.split) \r\n        //     isPlayingHandExist = true;\r\n        // if(index === state.split)\r\n        if(index === activeDeckIndex)\r\n            return resultsArray[resultsArray.length-1]\r\n        // else if(index === resultsArray.length-1)\r\n        else if(index === subtitutedIndex)\r\n            return 'decision';\r\n        else return result;\r\n    });\r\n\r\n    return updatedHandsResult;\r\n}\r\n\r\n\r\nconst reduecer = (state = initState, action) => {\r\n    let newStandArray;\r\n    switch (action.type) {\r\n        case actionTypes.START_ROUND:\r\n            return {\r\n                ...state,\r\n                round:true,\r\n                roundStatus:'pending',\r\n                bid:[+action.bid],\r\n                originalBid:+action.bid\r\n            }\r\n        case actionTypes.INSURANCE:\r\n            return {\r\n                ...state,\r\n                insurance:true\r\n            }\r\n        // case actionTypes.COLLECT_INSURANCE:\r\n        //     return {\r\n        //         ...state,\r\n        //         insurance:false\r\n        //     }\r\n        case actionTypes.ROUND_STATUS:\r\n            return {...state,\r\n                roundStatus:action.status\r\n            }\r\n        case actionTypes.INIT_ROUND_BID:\r\n            let newBidsArray = state.bid.map((bidAmount,bidIndex)=> {\r\n                if(bidIndex === action.deckIndex)\r\n                    return state.bid[state.bid.length-1]\r\n                else if(bidIndex === action.deckIndex -1)\r\n                    return 0\r\n                else\r\n                    return bidAmount\r\n            });\r\n            return {...state,bid:newBidsArray}\r\n\r\n        case actionTypes.DOUBLE_BID:\r\n\r\n            let newBidArray = state.bid.map((bidAmount,index)=>{\r\n                if(index === action.numOfSplits)\r\n                    return bidAmount*2\r\n                else return bidAmount\r\n            });\r\n\r\n            \r\n            return {...state,\r\n                bid:newBidArray}\r\n        case actionTypes.INIT_ROUND:\r\n            console.log('init game');\r\n            let what = {...initState};\r\n            return {\r\n                ...initState,\r\n            }\r\n        \r\n        case actionTypes.STAND:\r\n            // debugger;\r\n            if(state.stand.length === 1)\r\n            {\r\n                return {\r\n                    ...state,\r\n                    stand:[true],\r\n                    // split:newSplit,\r\n                    handsResult:['decision'],    \r\n                }\r\n            }\r\n            let foundNotFinishedDeck = state.handsResult.find(element => element === '');\r\n            if(foundNotFinishedDeck === '')\r\n            {\r\n                newStandArray = orderStandArray(state.stand);\r\n                let newSplit = state.split;\r\n                if(newSplit)\r\n                newSplit = state.split - 1;\r\n                \r\n                // isPlayingHandExist = false;\r\n\r\n                let updatedHandsResult = orderHandResultArray(state.handsResult,action.activeDeckIndex)\r\n                // let updatedHandsResult = state.handsResult.map((result,index)=> {\r\n                //     // if(result === '' && index !== state.split) \r\n                //     //     isPlayingHandExist = true;\r\n                //     // if(index === state.split)\r\n                //     if(index === action.activeDeckIndex)\r\n                //         return state.handsResult[state.handsResult.length-1]\r\n                //     else if(index === state.handsResult.length-1)\r\n                //         return 'decision';\r\n                //     else return result;\r\n                // })\r\n\r\n                // debugger;\r\n                \r\n                return {...state,\r\n                    stand:newStandArray,\r\n                    split:newSplit,\r\n                    handsResult:updatedHandsResult,    \r\n                }\r\n            \r\n            }\r\n        case actionTypes.CHANGE_NEXT_STATUS:\r\n            return {\r\n                ...state,\r\n                next:action.nextValue\r\n            }\r\n       \r\n        case actionTypes.CHANGE_HAND_RESULT:\r\n            // console.log('init game');\r\n            // decrease the split value if it's more than 0\r\n            let newSplitValue = state.split;\r\n            if(newSplitValue)\r\n            newSplitValue = state.split - 1;\r\n\r\n            // check if it's the last deck\r\n            let isLastDeck ;\r\n            let countUnfinishedDecks=0;\r\n            for (let index = 0; index < state.handsResult.length; index++) {\r\n                if(state.handsResult[index] === '')\r\n                    countUnfinishedDecks++;\r\n            }\r\n\r\n            isLastDeck = countUnfinishedDecks > 1 ? false : true ;\r\n\r\n            // isPlayingHandExist = false;\r\n            let newHandsResult = state.handsResult.map((result,index)=> {\r\n                // if(result === '' && index !== state.split)\r\n                //     isPlayingHandExist = true;\r\n                    if(result === '' && isLastDeck)\r\n                        return action.result;\r\n                    else if(index === 0 && !isLastDeck)\r\n                        return state.handsResult[state.handsResult.length-1]\r\n                    else if(index === state.handsResult.length-1)\r\n                        return action.result;\r\n                    else return result;\r\n            })\r\n            return {\r\n                ...state,\r\n                handsResult: newHandsResult,\r\n                split:newSplitValue\r\n            }\r\n            // if(isPlayingHandExist)\r\n            // else\r\n            //     return {\r\n            //         ...state,\r\n            //         handsResult: newHandsResult,\r\n            //         // roundStatus:'desicion',\r\n            //         split:newSplitValue\r\n            //     }\r\n        case actionTypes.SPLIT_DECK:\r\n            // newStandArray = orderStandArray(state.stand.concat(false))\r\n\r\n            return {\r\n                ...state,\r\n                split:action.numOfSplits,\r\n                bid:state.bid.concat(+state.originalBid),\r\n                stand:state.stand.concat(false),\r\n                handsResult: [...state.handsResult,'']\r\n\r\n            }\r\n        case actionTypes.DEALER_BUST:\r\n            return {\r\n                ...state,\r\n                dealerBust:true\r\n            }\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n}\r\n\r\nexport default reduecer;","C:\\black_jack\\black_jack\\src\\Store\\Reduecers\\cardReducer.js",["150","151","152","153","154"],"C:\\black_jack\\black_jack\\src\\hoc\\layout\\layout.js",[],"C:\\black_jack\\black_jack\\src\\containers\\Help\\Help.js",[],"C:\\black_jack\\black_jack\\src\\containers\\Game\\Game.js",["155","156","157","158","159","160","161","162"],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\actionTypes.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\index.js",["163","164","165","166","167","168"],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\TableBoard.js",["169","170","171","172"],"import React, { Component , Fragment , memo } from 'react'\r\nimport Dealer from './Dealer/Dealer'\r\nimport {connect} from 'react-redux'\r\nimport Player from './Player/Player'\r\nimport classes from './TableBoard.module.css'\r\nimport StartButton from '../UI/startButton/startButton'\r\nimport * as actions from '../../Store/Actions/index'\r\n// import Buttons from './Buttons/Buttons'\r\nimport Money from '../UI/Money/Money'\r\nimport Controls from '../UI/Controls/Controls'\r\nimport Chips from '../UI/Chips/Chips'\r\nimport Control from '../UI/Controls/Control/Control'\r\nimport Decision from './decisionPhase/Decision'\r\n\r\nexport class TableBoard extends Component {\r\n\r\n    state = {\r\n        playing:false\r\n    }\r\n\r\n    \r\n    startGameFunc = (e) => {\r\n        this.props.startGame();\r\n        this.setState({playing:true});\r\n        e.preventDefault();\r\n        \r\n        \r\n    }\r\n    \r\n    render() {\r\n       \r\n        let playerStillAlive = (<Fragment>\r\n            <div className={classes.dealerAndPlayer}>     \r\n                \r\n                <Dealer></Dealer>\r\n                <Chips></Chips>\r\n                <Player></Player>\r\n            </div>\r\n            <div className={classes.Money}>\r\n                <Money children={'nope'}>\r\n                </Money>\r\n            </div>\r\n            <div className={classes.Controls}>\r\n                {/* {this.props.desicionPhase === 'decision' ? \r\n                <Decision></Decision> \r\n                :\r\n            <Controls></Controls>\r\n        } */}\r\n        <Controls></Controls>\r\n            </div>\r\n        </Fragment>);\r\n\r\n        let playerLost = <div className={classes.playerLost}>\r\n            better luck next time </div>\r\n\r\n       console.count('tableBoard')\r\n        return (\r\n            <div className={classes.TableBoard}>\r\n                {this.props.lost ? playerLost: playerStillAlive}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst MapStateToProps = state => {\r\n    return {\r\n        playing : state.game.isPlaying,\r\n        lost: state.game.lost,\r\n        // desicionPhase: state.round.roundStatus    \r\n    }\r\n}\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n    return {\r\n        // startGame : () => dispatch(actions.startGame()),\r\n          }\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps,mapDistpatchToProps)(memo(TableBoard))\r\n\r\n\r\n","C:\\black_jack\\black_jack\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\gameAction.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\roundAction.js",[],"C:\\black_jack\\black_jack\\src\\Store\\Actions\\cardAction.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Dealer\\Dealer.js",["173","174","175"],"import React, { Component , memo } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Deck from '../Deck/Deck'\r\nimport classes from './Dealer.module.css'\r\nimport * as actions from '../../../Store/Actions/index'\r\n\r\nexport class Dealer extends Component {\r\n\r\n\r\n    state = {\r\n        numOfRequestForCard:0,\r\n        showCard:true\r\n    }\r\n    checkIfallPlayersDeckAreDone = (standArray) => {\r\n        for (const stand of standArray) {\r\n            if(!stand)\r\n                return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    DidPlayerFinished = () => {\r\n        if(this.props.handsResult.find(result => result === '') == '')\r\n            return false\r\n        else\r\n            return true;\r\n    }\r\n   \r\n    shouldComponentUpdate = (nextProps,nextState) => {\r\n        if(!nextProps.dealerDeck.length)\r\n            return true\r\n        if(nextProps.dealerDeck.length - nextState.numOfRequestForCard === 2)\r\n        {\r\n           return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if(\r\n             this.checkIfallPlayersDeckAreDone(this.props.handsResult)\r\n         )\r\n        {\r\n            switch (true) {\r\n                case this.props.dealerCardsSum > 21:\r\n                    console.log('dealer lost (cards > 21)')\r\n                    this.props.dealerBust();\r\n                    this.setState({\r\n                        numOfRequestForCard:0\r\n                    });\r\n                 \r\n                    break;\r\n                case this.props.dealerCardsSum < 17 :\r\n                        //  add another card to the dealer\r\n                        if(this.props.dealerDeck.length - this.state.numOfRequestForCard === 2)\r\n                        {\r\n                            this.props.addCardtoDealer();\r\n                            this.setState({\r\n                                numOfRequestForCard:this.state.numOfRequestForCard + 1\r\n                            });\r\n                        }\r\n                    break;\r\n                        \r\n                // case this.props.dealerCardsSum == 21:\r\n                default:\r\n                            if(this.props.roundStatus == 'pending')                           \r\n                                this.props.changeRoundStatus('decision');\r\n                            if(this.state.numOfRequestForCard)     \r\n                                this.setState({\r\n                                    numOfRequestForCard:0\r\n                                });   \r\n                    break;\r\n            }\r\n        }\r\n        // debugger;\r\n        if(this.DidPlayerFinished() && !this.state.showCard && this.props.dealerDeck.length == 2) \r\n            this.setState({showCard:true})\r\n        \r\n        else if(!this.props.dealerDeck.length && this.state.showCard)\r\n            this.setState({showCard:false})\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Dealer}>\r\n                <div className={classes.Deck}>\r\n                <h2>Diller's hand</h2>\r\n                {this.props.dealerCardsSum ?\r\n                    <Deck\r\n                        HideDealerCard ={!this.state.showCard}\r\n                        toHide={true}\r\n                        deckCards = {this.props.dealerDeck}\r\n                        deckSum = {this.props.dealerCardsSum}\r\n                        dealer\r\n                    >\r\n                    </Deck> :''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MapStateToProps = state => {\r\n    return {\r\n        dealerDeck : state.cards.dealerCards,\r\n        handsResult : state.round.handsResult,\r\n        dealerCardsSum:state.cards.dealerCardsSum,\r\n        roundStatus:state.round.roundStatus\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapDistpatchToProps = dispatch => {\r\n    return {\r\n\r\n        changeRoundStatus : (status) => dispatch(actions.roundStatus(status)),\r\n        addCardtoDealer : () => dispatch(actions.addCard('dealer')),\r\n        dealerBust : () => dispatch(actions.dealerBust()),\r\n       \r\n \r\n    }\r\n}\r\n\r\nexport default connect(MapStateToProps,mapDistpatchToProps)(memo(Dealer))\r\n","C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Player\\Player.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\startButton\\startButton.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Logo\\Logo.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Money\\Money.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Controls.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Chips\\Chips.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Deck.js",[],"C:\\black_jack\\black_jack\\src\\components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\black_jack\\black_jack\\src\\components\\UI\\Controls\\Control\\Control.js",["176"],"import React from 'react'\r\nimport classes from './Control.module.css'\r\n\r\nconst Control = props => {\r\n\r\n    let disabledClass = props.visibility === 'hidden' ? ' shutDown' :'';\r\n    // debugger;\r\n    let insuranceOnButton = props.insurance;\r\n        return (\r\n            <div className={classes.Control + ' ' + (props.visibility === 'hidden' ? classes.shutDown :'') + (insuranceOnButton ? ' ' + classes.insuranceOn : '')}>\r\n                <button onClick={props.clicked}\r\n                        // style={{'visibility':`${props.visibility}`}}\r\n                        disabled={props.visibility === 'hidden' } \r\n                        \r\n                >\r\n                             {props.children}\r\n                </button>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Control\r\n","C:\\black_jack\\black_jack\\src\\hoc\\asyncComponent\\asyncComponent.js",[],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\Deck\\Card\\Card.js",["177","178"],"import React from 'react'\r\nimport classes from './Card.module.css'\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    let colour = 'black'\r\n    let cardSuit = '♣';\r\n    switch (props.symbol) {\r\n        case 'diamond':\r\n            colour = 'red';\r\n            cardSuit = '♦'\r\n            break;\r\n        case 'heart':\r\n            colour='red';\r\n            cardSuit = '♥'\r\n            break;\r\n        case 'club':\r\n            cardSuit = '♣';\r\n            break;\r\n        case 'spade':\r\n            cardSuit = '♠'\r\n            break;\r\n        default:\r\n            console.log('cardSuit is not accaptable!');\r\n            console.error('card suit in not accaptable');\r\n            break;\r\n    }\r\n\r\n\r\n    let cardNumber = props.value;\r\n    switch (cardNumber) {\r\n        case 11:\r\n            cardNumber = props.isAce ? 'A' : 'J';\r\n            // cardNumber = 'J';\r\n            break;\r\n        case 12:\r\n            cardNumber = 'Q';\r\n            break;\r\n        case 13:\r\n            cardNumber = 'K';\r\n            break;\r\n        case 1:\r\n            cardNumber = 'A';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    // if(props.symbol == 'dimond' || 'heart')\r\n    //     colour = 'red'\r\n\r\n    \r\n    let CardClass = `${classes.Card}` + ` ` + `${props.Hiden ? classes.Hiden : ''}`\r\n    let cardActiveClass = `${props.markCard ? classes.active:classes.disActive}`;\r\n    return (\r\n        <div className={CardClass + ' ' + props.newLine + ' ' + cardActiveClass + (props.Hiden ? classes.Hiden : '')} style={{'color':colour}}>\r\n            <div className={classes.Value } >\r\n                <span \r\n                    // style={{'display':`${props.Hiden ? 'none' : true}`}}\r\n                    // className={props.Hiden ? classes.Hiden : ''}\r\n                >\r\n                    {props.Hiden ? '' : cardNumber}\r\n                </span>\r\n            </div>\r\n            <div className={classes.Suit}>\r\n                <span \r\n                    // style={{'display':`${props.Hiden ? 'none' : true}`}}\r\n                    // className={props.Hiden ? classes.Hiden : ''}\r\n                >\r\n                      {props.Hiden ? '' : cardSuit}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Card)\r\n","C:\\black_jack\\black_jack\\src\\components\\TableBoard\\decisionPhase\\decision.js",["179","180"],"C:\\black_jack\\black_jack\\src\\components\\TableBoard\\decisionPhase\\Decision.js",["181"],"import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport classes from './Decision.module.css'\r\n\r\nimport Control from '../../UI/Controls/Control/Control'\r\nimport * as actions from '../../../Store/Actions/index'\r\n\r\n\r\nexport class Decision extends Component {\r\n\r\n    changeNextButton = (val) => {\r\n        this.props.changeNextStatus(true)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n            className={classes.Decision}\r\n            >\r\n                <Control\r\n                visibility='visible'\r\n                clicked={() => this.changeNextButton(true)}\r\n                >\r\n                    Next\r\n                </Control>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n//clicked\r\n\r\n\r\nconst mapDistpatchToprops = dispatch => {\r\n    return {\r\n        changeNextStatus : (nextState) => dispatch(actions.changeNextValue(nextState))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDistpatchToprops)(Decision)\r\n","C:\\black_jack\\black_jack\\src\\components\\UI\\AlertBox\\AlertBox.js",[],{"ruleId":"182","severity":1,"message":"183","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":23},{"ruleId":"182","severity":1,"message":"186","line":8,"column":32,"nodeType":"184","messageId":"185","endLine":8,"endColumn":48},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"182","severity":1,"message":"191","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":21,"column":67,"nodeType":"194","messageId":"195","endLine":21,"endColumn":69},{"ruleId":"196","severity":1,"message":"197","line":23,"column":30,"nodeType":"198","messageId":"199","endLine":23,"endColumn":32},{"ruleId":"196","severity":1,"message":"197","line":39,"column":35,"nodeType":"198","messageId":"199","endLine":39,"endColumn":37},{"ruleId":"192","severity":1,"message":"193","line":55,"column":70,"nodeType":"194","messageId":"195","endLine":55,"endColumn":72},{"ruleId":"196","severity":1,"message":"197","line":57,"column":31,"nodeType":"198","messageId":"199","endLine":57,"endColumn":33},{"ruleId":"182","severity":1,"message":"200","line":130,"column":17,"nodeType":"184","messageId":"185","endLine":130,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":177,"column":9,"nodeType":"203","messageId":"204","endLine":181,"endColumn":14},{"ruleId":"182","severity":1,"message":"205","line":15,"column":7,"nodeType":"184","messageId":"185","endLine":15,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":110,"column":17,"nodeType":"208","messageId":"209","endLine":110,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":115,"column":17,"nodeType":"208","messageId":"209","endLine":115,"endColumn":23},{"ruleId":"192","severity":1,"message":"210","line":146,"column":84,"nodeType":"194","messageId":"195","endLine":146,"endColumn":86},{"ruleId":"192","severity":1,"message":"210","line":151,"column":84,"nodeType":"194","messageId":"195","endLine":151,"endColumn":86},{"ruleId":"182","severity":1,"message":"211","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"212","line":20,"column":25,"nodeType":"184","messageId":"185","endLine":20,"endColumn":26},{"ruleId":"182","severity":1,"message":"213","line":25,"column":25,"nodeType":"184","messageId":"185","endLine":25,"endColumn":28},{"ruleId":"182","severity":1,"message":"214","line":69,"column":25,"nodeType":"184","messageId":"185","endLine":69,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":115,"column":8,"nodeType":"217","endLine":115,"endColumn":38,"suggestions":"218"},{"ruleId":"182","severity":1,"message":"214","line":131,"column":21,"nodeType":"184","messageId":"185","endLine":131,"endColumn":32},{"ruleId":"215","severity":1,"message":"219","line":140,"column":8,"nodeType":"217","endLine":140,"endColumn":37,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"221","line":157,"column":8,"nodeType":"217","endLine":157,"endColumn":28,"suggestions":"222"},{"ruleId":"182","severity":1,"message":"223","line":3,"column":17,"nodeType":"184","messageId":"185","endLine":3,"endColumn":35},{"ruleId":"182","severity":1,"message":"224","line":3,"column":36,"nodeType":"184","messageId":"185","endLine":3,"endColumn":52},{"ruleId":"182","severity":1,"message":"225","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"226","line":75,"column":11,"nodeType":"184","messageId":"185","endLine":75,"endColumn":21},{"ruleId":"182","severity":1,"message":"227","line":108,"column":25,"nodeType":"184","messageId":"185","endLine":108,"endColumn":32},{"ruleId":"182","severity":1,"message":"228","line":140,"column":7,"nodeType":"184","messageId":"185","endLine":140,"endColumn":27},{"ruleId":"182","severity":1,"message":"229","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":19},{"ruleId":"182","severity":1,"message":"230","line":7,"column":13,"nodeType":"184","messageId":"185","endLine":7,"endColumn":20},{"ruleId":"182","severity":1,"message":"231","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":15},{"ruleId":"182","severity":1,"message":"232","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":23,"column":65,"nodeType":"198","messageId":"199","endLine":23,"endColumn":67},{"ruleId":"196","severity":1,"message":"197","line":66,"column":55,"nodeType":"198","messageId":"199","endLine":66,"endColumn":57},{"ruleId":"196","severity":1,"message":"197","line":76,"column":93,"nodeType":"198","messageId":"199","endLine":76,"endColumn":95},{"ruleId":"182","severity":1,"message":"233","line":6,"column":9,"nodeType":"184","messageId":"185","endLine":6,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":53,"column":39,"nodeType":"198","messageId":"236","endLine":53,"endColumn":40},{"ruleId":"234","severity":1,"message":"235","line":53,"column":45,"nodeType":"198","messageId":"236","endLine":53,"endColumn":46},{"ruleId":"237","severity":2,"message":"238","line":8,"column":29,"nodeType":"184","messageId":"239","endLine":8,"endColumn":36},{"ruleId":"237","severity":2,"message":"240","line":35,"column":16,"nodeType":"184","messageId":"239","endLine":35,"endColumn":23},{"ruleId":"182","severity":1,"message":"241","line":31,"column":7,"nodeType":"184","messageId":"185","endLine":31,"endColumn":22},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'devToolsEnhancer' is defined but never used.","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'actionPromise' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'what' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'playerDecks' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'AlertBox' is defined but never used.","'x' is defined but never used.","'aaa' is defined but never used.","'totalProfit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isInsuranceCollected' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["244"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["245"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["246"],"'markDeckAsFinished' is defined but never used.","'updateDeckResult' is defined but never used.","'time' is defined but never used.","'playerDeck' is assigned a value but never used.","'sumDeck' is assigned a value but never used.","'checkForDifferentSum' is assigned a value but never used.","'StartButton' is defined but never used.","'actions' is defined but never used.","'Control' is defined but never used.","'Decision' is defined but never used.","'disabledClass' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-undef","'classes' is not defined.","undef","'connect' is not defined.","'MapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [props.roundStatus, props.next, props, isInsuranceCollected]",{"range":"253","text":"254"},"Update the dependencies array to be: [props, props.dealerBust, props.next]",{"range":"255","text":"256"},"Update the dependencies array to be: [props, props.roundStarted]",{"range":"257","text":"258"},[5465,5495],"[props.roundStatus, props.next, props, isInsuranceCollected]",[6448,6477],"[props, props.dealerBust, props.next]",[6909,6929],"[props, props.roundStarted]"]